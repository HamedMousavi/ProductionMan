<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BkDarkest}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="Black" />
    </Style>

    <Style x:Key="MainGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BkDarker}" />
    </Style>

    <Style x:Key="MainLogoImage" TargetType="Image" BasedOn="{StaticResource NonScaledImage}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="MainTitleBar" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource BkDarkest}" />
    </Style>

    <Style x:Key="MainTabControl" TargetType="TabControl">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource BkLight}" />
        <Setter Property="BorderBrush" Value="{StaticResource BkDarkest}" />
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Margin" Value="3,3,3,0" />
        <!--<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" ShadowDepth="1" Opacity="0.3" Direction="90" BlurRadius="4" />
                            </Border.Effect>
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainTabItem" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border  BorderThickness="2,2,2,0" Cursor="Hand" >
                        <!--<Border.Effect>
                            <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.2" Direction="90" />
                        </Border.Effect>-->
                        <Border Name="HeaderOuterBorder" BorderThickness="1,1,1,0" >
                            <Border Name="HeaderBorder" BorderThickness="1,1,1,0" >
                                <Border Name="HeaderOverrideBorder" BorderThickness="0,0,0,2" Margin="-1,0,-1,-2" Padding="8,5,8,5" >
                                    <ContentPresenter ContentSource="Header" />
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource BkDark}"/>
                            <Setter Property="BorderBrush" TargetName="HeaderBorder" Value="{StaticResource BorderLight}"/>
                            <Setter Property="BorderBrush" TargetName="HeaderOuterBorder" Value="{StaticResource BkDarkest}"/>
                            <Setter Property="BorderBrush" TargetName="HeaderOverrideBorder" Value="{StaticResource BkDark}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="HeaderBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="HeaderOuterBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="HeaderOverrideBorder" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainTabItemLabel" TargetType="Label">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <!--<Setter Property="Foreground" Value="White"></Setter>-->
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="MainTabPageLabel" TargetType="Label">
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderLight}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Background" Value="{StaticResource BkDark}" />
        <Setter Property="Foreground" Value="{StaticResource TextColorGold}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="40"></Setter>
    </Style>

    <Style x:Key="MainTabItemPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
    </Style>

    <Style x:Key="MainTabItemImage" BasedOn="{StaticResource NonScaledImage}" TargetType="Image">
        <Setter Property="Margin" Value="0"></Setter>
    </Style>

    <Style x:Key="MainContainerOuterBorder" TargetType="Border">
        <Setter Property="Margin" Value="3,0,3,3" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BkDarkest}" />
    </Style>

    <Style x:Key="MainContainerInnerBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BkLight}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="BorderBrush" Value="White" />
    </Style>

    <Style x:Key="MainStatusBar" TargetType="StatusBar">
        <Setter Property="Foreground" Value="{StaticResource TextColorWhite}" />
        <Setter Property="Background" Value="{StaticResource BkDarkest}" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="3,0,3,3" />
    </Style>


    <Style x:Key="CleanDataGrid" TargetType="DataGrid">
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BkDark}" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource BkDarkest}" />
        <Setter Property="Background" Value="{StaticResource BkLight}" />
    </Style>

    <Style x:Key="CleanDataGridRowFocusColor" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(DataGridRow.Foreground)" To="Khaki" Duration="0:0:1"></ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CleanDataGridCenterVAlign" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListManagerToolbar" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="8" />
    </Style>

</ResourceDictionary>